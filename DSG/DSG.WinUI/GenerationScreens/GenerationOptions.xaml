<Page x:Class="DSG.WinUI.GenerationScreens.GenerationOptions"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DSG.WinUI.GenerationScreens" 
      xmlns:local1="clr-namespace:DSG.WinUI.Behavior" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
      xmlns:validation="clr-namespace:DSG.WinUI.Validation" 
      xmlns:generation="clr-namespace:DSG.Presentation.ViewModel.Generation;assembly=DSG.Presentation"
      d:DataContext="{d:DesignInstance Type=generation:GenerationOptionsViewModel}"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="GenerationOptions">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1.3*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.7*"/>
        </Grid.RowDefinitions>

        <TextBlock 
            Grid.Row="0" 
            Grid.ColumnSpan="8" 
            Style="{StaticResource pageTitleDefaultStyle}">
            Generation Options
        </TextBlock>

        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource menuButton}" IsEnabled="{Binding IsDataLoaded}">
            <i:Interaction.Behaviors>
                <local1:DropDownButtonBehavior/>
            </i:Interaction.Behaviors>
            <Button.Content>
                <Image Source="../Images/cog.png"/>
            </Button.Content>
            <Button.ContextMenu>
                <ContextMenu IsEnabled="True"  Placement="Bottom" Background="HotPink" Width="200">
                    <Button Margin="-37, 0, 0, 0" Command="{Binding NavigateToWelcomeScreenCommand}" Style="{StaticResource PinkButton}" Width="200">
                        <i:Interaction.Behaviors>
                            <local1:DropDownButtonContextMenuBehavior/>
                        </i:Interaction.Behaviors>
                        <TextBlock>
                            Welcome Screen
                        </TextBlock>
                    </Button>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>

        <!-- This contains a a list of available expansions alongside checkboxes where they can be chosen for generation. -->
        <DataGrid
            Grid.Row="1"
            Grid.Column="1"
            Grid.RowSpan="5"
            ItemsSource="{Binding IsDominionExpansionSelectedDtos}"              
            Style="{StaticResource dataGridDefaultStyle}"
            Width="Auto">
            <DataGrid.Resources>
                <ResourceDictionary Source="/ResourceDictionaries/NotSelectableCellDictionary.xaml"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn 
                    ElementStyle="{StaticResource checkboxStyle}" 
                    Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    IsReadOnly="False"/>
                <DataGridTextColumn 
                    Binding="{Binding DominionExpansion.Name}"
                    FontSize="20" 
                    Width="*"
                    IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock Style="{StaticResource dataGridTitleDefaultStyle}" FontSize="16" Text="Expansions"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Button 
            Grid.Row="6" 
            Grid.Column="2" 
            Height="32" 
            Command="{Binding GenerateSetCommand}">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource PinkButton}">
                    <Setter Property="IsEnabled" Value="{Binding IsDataLoaded}"/>
                    <Style.Triggers>
                        <!--<DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference sheltersProp}}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference platinumBox}}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>                
            </Button.Style>
            <TextBlock>
                Generate
            </TextBlock>
        </Button>

        <Label 
            Grid.Row="2"
            Grid.Column="4"
            Style="{StaticResource generationOptionsLabel}"
            Width="250">
            <TextBlock 
                TextWrapping="WrapWithOverflow" 
                FontSize="18" 
                FontWeight="Bold">
                Propability for Amounts of non-Supply Cards: <LineBreak/> (Events, Ways, ...)
            </TextBlock>
        </Label>

        <!-- This button opens a context menu containing the propabilities for non supply cards. -->
        <Button Grid.Row="2" Grid.Column="5" Height="39" Width="39" VerticalAlignment="Center" HorizontalAlignment="Left" 
                Background="Wheat" IsEnabled="{Binding IsDataLoaded}">
            <i:Interaction.Behaviors>
                <local1:DropDownButtonToRightBehavior/>
            </i:Interaction.Behaviors>
            <Button.Content>
                <Image Source="../Images/Events.png"/>
            </Button.Content>
            <Button.ContextMenu>
                <ContextMenu IsEnabled="True" Background="Wheat" Width="260">
                    <WrapPanel Margin="-37, 0, 0, 0">
                        <StackPanel>
                            <Label Content="0" Style="{StaticResource nonSupplyLabel}" />
                            <Label Content=" 100 - Rest " FontSize="20" Background="Wheat"/>
                        </StackPanel>
                        
                        <!--Propability for One-->
                        
                        <StackPanel>
                            <Label Content="1" Style="{StaticResource nonSupplyLabel}"/>
                            <TextBox x:Name="prop1Box" Validation.ErrorTemplate="{StaticResource nonSupplyPropsErrorTemplate}">
                                <TextBox.Style >
                                    <Style BasedOn="{StaticResource nonSupplyBox}" TargetType="TextBox">
                                        <Style.Triggers>
                                            <!--<DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference prop3Box}}" Value="true">
                                                <Setter Property="BorderBrush" Value="OrangeRed"/>
                                                <Setter Property="BorderThickness" Value="2"/>
                                            </DataTrigger>-->
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                                <TextBox.Resources>
                                    <validation:BindingProxy x:Key="Prop1" Data="{Binding SelectedProfile.PropabilityForNonSupplyCards}"/>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding  Path="SelectedProfile.PropabilityForNonSupplyCards.PropabilityForOne" UpdateSourceTrigger="PropertyChanged">
                                        <!--<Binding.ValidationRules>
                                            <validation:ValidatePropabilitiesForNonSupplyCards>
                                                <validation:ComparisonValueForPropabilitiesForNonSupplyCards Value="{Binding Data, Source={StaticResource Prop1}}"/>
                                            </validation:ValidatePropabilitiesForNonSupplyCards>
                                        </Binding.ValidationRules>-->
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        
                        <!--Propability For Two-->
                        
                        <StackPanel>
                            <Label Content="2" Style="{StaticResource nonSupplyLabel}"/>
                            <TextBox x:Name="prop2Box" Validation.ErrorTemplate="{StaticResource nonSupplyPropsErrorTemplate}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource nonSupplyBox}">
                                        <Style.Triggers>
                                            <!--<DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference prop3Box}}" Value="true">
                                                <Setter Property="BorderBrush" Value="OrangeRed"/>
                                                <Setter Property="BorderThickness" Value="2"/>
                                            </DataTrigger>-->
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                                <TextBox.Resources>
                                    <validation:BindingProxy x:Key="Prop2" Data="{Binding SelectedProfile.PropabilityForNonSupplyCards}"/>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding  Path="SelectedProfile.PropabilityForNonSupplyCards.PropabilityForTwo" UpdateSourceTrigger="PropertyChanged">
                                        <!--<Binding.ValidationRules>
                                            <validation:ValidatePropabilitiesForSecondNonSupplyCard>
                                                <validation:ComparisonValueForPropabilitiesForNonSupplyCards Value="{Binding Data, Source={StaticResource Prop2}}" BindingToTrigger="{Binding Data, Source={StaticResource Prop2}}"/>
                                            </validation:ValidatePropabilitiesForSecondNonSupplyCard>
                                        </Binding.ValidationRules>-->
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <!--Propability For Three-->
                        
                        <StackPanel>
                            <Label Content="3"  Style="{StaticResource nonSupplyLabel}"/>
                            <TextBox Text="{Binding SelectedProfile.PropabilityForNonSupplyCards.PropabilityForThree}">
                                <TextBox.Style >
                                    <Style TargetType="TextBox" BasedOn="{StaticResource nonSupplyBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference prop1Box}}" Value="true">
                                                <Setter Property="BorderBrush" Value="OrangeRed"/>
                                                <Setter Property="BorderThickness" Value="2"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>

                        <!--Propability For Four-->
                        
                        <StackPanel>
                            <Label Content="4"  Style="{StaticResource nonSupplyLabel}"/>
                            <TextBox Text="{Binding SelectedProfile.PropabilityForNonSupplyCards.PropabilityForFour}">
                                <TextBox.Style >
                                    <Style TargetType="TextBox" BasedOn="{StaticResource nonSupplyBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference prop1Box}}" Value="true">
                                                <Setter Property="BorderBrush" Value="OrangeRed"/>
                                                <Setter Property="BorderThickness" Value="2"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference prop2Box}}" Value="true">
                                                <Setter Property="BorderBrush" Value="OrangeRed"/>
                                                <Setter Property="BorderThickness" Value="2"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>
                    </WrapPanel>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>

        <Label
            Grid.Row="3"
            Grid.Column="4"
            Style="{StaticResource generationOptionsLabel}"
            Content="Propability Shelters: "/>

        <TextBox x:Name="sheltersProp" 
            Validation.ErrorTemplate="{StaticResource nonSupplyPropsErrorTemplate}"
            Grid.Column="5"
            Grid.Row="3">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource propabilitiesBox}">
                </Style>
            </TextBox.Style>
                <TextBox.Resources>
                    <validation:BindingProxy x:Key="Prop2" Data="{Binding SelectedProfile.PropabilityForNonSupplyCards}"/>
                </TextBox.Resources>
                <TextBox.Text>
                    <Binding  Path="SelectedProfile.PropabilityForShelters" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:ValidatePropability>
                                <validation:ComparisonValueForPropability />
                            </validation:ValidatePropability>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
        </TextBox>

        <Label
            Grid.Row="4"
            Grid.Column="4"
            Style="{StaticResource generationOptionsLabel}"
            Content="Propability Platinum/Colony: "/>

        <TextBox x:Name="platinumBox" 
            Validation.ErrorTemplate="{StaticResource nonSupplyPropsErrorTemplate}"
            Grid.Column="5"
            Grid.Row="4">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource propabilitiesBox}">
                </Style>
            </TextBox.Style>
            <TextBox.Resources>
                <validation:BindingProxy x:Key="Prop2" Data="{Binding SelectedProfile.PropabilityForNonSupplyCards}"/>
            </TextBox.Resources>
            <TextBox.Text>
                <Binding  Path="SelectedProfile.PropabilityForPlatinumAndColony" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:ValidatePropability>
                            <validation:ComparisonValueForPropability />
                        </validation:ValidatePropability>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <!-- This is the button opening the dropdown menu for loading and saving generation profiles. -->
        <Button Grid.Row="6" Grid.Column="6" Style="{StaticResource PinkButton}" IsEnabled="{Binding IsDataLoaded}" Content="Profiles">
            <i:Interaction.Behaviors>
                <local1:DropDownButtonToTopBehavior/>
                <local1:ProfileDropDownBehavior SelectedProfileName="{Binding SelectedProfile.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </i:Interaction.Behaviors>
            <Button.ContextMenu>
                <ContextMenu IsEnabled="True" Background="Wheat" Width="458">
                    <StackPanel Margin="-37, 0, 0, 0">
                        <!-- This contains a textbox for the profile name and a save button. It also contains validation for the name. -->
                        <WrapPanel>
                            <TextBox Width="250" Style="{StaticResource profileNameBox}" Validation.ErrorTemplate="{StaticResource errorTemplate}" x:Name="profilesName">
                                <TextBox.Resources>
                                    <validation:BindingProxy x:Key="TargetProxy" Data="{Binding GenerationProfiles}"/>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding  Path="SelectedProfile.Name" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:ValidateGenerationProfile>
                                                <validation:ComparisonValueForGenerationProfileViewEntity Value="{Binding Data, Source={StaticResource TargetProxy}}"/>
                                            </validation:ValidateGenerationProfile>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <!-- The saving button. Has to be there with the complete style since it has a source attribute bound to the textbox above -->
                            <Button Command="{Binding SaveProfileCommand}" Content="Save Current">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="Olive"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Button.Height" Value="37"/>
                                        <Setter Property="Button.Width" Value="200"/>
                                        <Setter Property="Button.FontSize" Value="18"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference profilesName}}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference sheltersProp}}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), Source={x:Reference platinumBox}}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </WrapPanel>
                        <!-- This is a splitter between the saving and the loading part. -->
                        <Label Background="Wheat" Width="450" Height="10"></Label>
                        <!-- This contains name and loading button for all generation profiles. -->
                        <ItemsControl
                            HorizontalContentAlignment="Stretch" 
                            ItemsSource="{Binding GenerationProfiles}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <Label Content="{Binding GenerationProfile.Name}" Style="{StaticResource profileLabel}"/>
                                        <Button Style="{StaticResource profileButton}" Command="{Binding LoadProfileCommand}" Content="Load"/>
                                        <Button Style="{StaticResource profileButton}" Command="{Binding DeleteProfileCommand}" Content="Delete"/>
                                    </WrapPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>

        <!-- This control has to be on bottom to be overlaying all the other controls. -->
        <Image gif:AnimationBehavior.SourceUri="/Images/Loading.gif" 
               HorizontalAlignment="Center"  
               Grid.ColumnSpan="13" 
               Grid.RowSpan="8"
               VerticalAlignment="Center" 
               Height="150" 
               Width="150" 
               Visibility="{Binding Path=IsDataLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>        
    </Grid>
</Page>
